[{"C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Banner.js":"4","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Movies.js":"5","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\getMovies.js":"6","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Navbar.js":"7","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Favorites.js":"8"},{"size":476,"mtime":1688714411025,"results":"9","hashOfConfig":"10"},{"size":989,"mtime":1688714411024,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1688714411025,"results":"12","hashOfConfig":"10"},{"size":1179,"mtime":1688714411025,"results":"13","hashOfConfig":"10"},{"size":6161,"mtime":1688714411025,"results":"14","hashOfConfig":"10"},{"size":12785,"mtime":1688714411025,"results":"15","hashOfConfig":"10"},{"size":578,"mtime":1691077621661,"results":"16","hashOfConfig":"10"},{"size":9798,"mtime":1688714411025,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q8jcr0",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\index.js",[],[],"C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\App.js",["46","47","48"],[],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Navbar from './Component/Navbar';\r\nimport Banner from './Component/Banner';\r\nimport Movies from './Component/Movies';\r\nimport { movies } from './Component/getMovies';\r\nimport Favorites from './Component/Favorites';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  BrowserRouter,\r\n} from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Routes>\r\n        {/* <Route  path=\"/\"   render={(props) => (\r\n          <>\r\n            <Banner {...props} />\r\n            <Movies {...props} />\r\n\r\n          </>\r\n        )} /> */}\r\n        <Route path='/' element={\r\n          <>\r\n            <Banner />\r\n            <Movies />\r\n          </>\r\n        } />\r\n        <Route path=\"/favorites\" element={<Favorites />} />\r\n      </Routes>\r\n      {/* <Banner/>  */}\r\n      {/* <Movies/> */}\r\n      {/* <Favorites/> */}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\reportWebVitals.js",[],[],"C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Banner.js",["49","50"],[],"import {  movies } from './getMovies'\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class extends Component {\r\n    \r\n    render() {\r\n        let movie = movies.results[0]\r\n        return (\r\n            <>\r\n                {\r\n                    movie == '' ?\r\n                        <div className=\"spinner-border text-warning\" role=\"status\">\r\n                            <span className=\"visually-hidden\">Loading...</span>\r\n                        </div> :\r\n                        <div className=\"card banner-card\" >\r\n                            <img src={`https://image.tmdb.org/t/p/original${movie.backdrop_path}`} alt={movie.title} className=\"card-img-top banner-img\" />\r\n                            {/* <div className=\"card-body\"> */}\r\n                                <h1 className=\"card-title banner-title\">{movie.original_title}</h1>\r\n                                <p className=\"card-text banner-text\">{movie.overview}</p>\r\n                                {/* <a  href=\"#\" class=\"btn btn-primary\">Go somewhere</a> */}\r\n                            {/* </div> */}\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Movies.js",["51","52","53","54","55","56","57","58","59"],[],"import React, { Component } from 'react'\r\n// import { movies } from './getMovies'\r\nimport axios from 'axios';\r\n\r\nexport default class Movies extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hover: '',\r\n            parr: [1],\r\n            currPage: 1,\r\n            movies: [],\r\n            favorites : []\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        //Side effects \r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=5540e483a20e0b20354dabc2d66a31c9&language=en-US&page=${this.state.currPage}`);\r\n        let data = res.data\r\n        // console.log(data);\r\n        // console.log('mounting');\r\n\r\n        this.setState({\r\n            movies: [...data.results]\r\n        })\r\n        // let callbackfn = (entries) => {\r\n        //     if (entries[0].isIntersecting) {\r\n        //         this.loadMoreMovies();\r\n        //     }\r\n        this.handleFavoritesState();\r\n    }\r\n    changeMovies = async () => {\r\n        console.log(\"changemovies called\");\r\n        console.log(this.state.currPage);\r\n        const res = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=5540e483a20e0b20354dabc2d66a31c9&language=en-US&page=${this.state.currPage}`);\r\n        let data = res.data\r\n        // console.log(data);\r\n        this.setState({\r\n            movies: [...data.results]\r\n        })\r\n    }\r\n    handleRight = () => {\r\n        let temparr = []\r\n        for (let i = 1; i <= this.state.parr.length + 1; i++) {\r\n            temparr.push(i);\r\n        }\r\n        this.setState({\r\n            parr: [...temparr],\r\n            currPage: this.state.currPage + 1\r\n        }, this.changeMovies)\r\n    }\r\n\r\n    handleLeft = () => {\r\n        if (this.state.currPage != 1) {\r\n            this.setState({\r\n                currPage: this.state.currPage - 1\r\n            }, this.changeMovies)\r\n        }\r\n    }\r\n\r\n    handleClick = (value) => {\r\n        if (value != this.state.currPage) {\r\n            console.log(\"i am called\")\r\n            this.setState({\r\n                currPage: value\r\n            }, this.changeMovies)\r\n        }\r\n    }\r\n    handleFavorites = (movie) => {\r\n        let oldData = JSON.parse(localStorage.getItem(\"movie2\") || \"[]\")\r\n        if (this.state.favorites.includes(movie.id)) {\r\n            oldData = oldData.filter((m) => m.id != movie.id)\r\n        } else {\r\n            oldData.push(movie)\r\n        }\r\n        localStorage.setItem(\"movie2\", JSON.stringify(oldData));\r\n        console.log(oldData);\r\n        this.handleFavoritesState();\r\n    }\r\n    handleFavoritesState=()=>{\r\n        let oldData = JSON.parse(localStorage.getItem(\"movie2\")||\"[]\")\r\n        let temp = oldData.map((movie)=>movie.id);\r\n        this.setState({\r\n            favorites:[...temp]\r\n        })\r\n    }\r\n    render() {\r\n        // let movie = movies.results\r\n        // console.log('render');\r\n        return (\r\n            <>\r\n                {\r\n                    this.state.movies.length == 0 ?\r\n                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div> :\r\n                        <div>\r\n                            <h3 className=\"text-center\" style={{color:'white'}}><strong>Trending</strong></h3>\r\n                            <div className='movies-list'>\r\n                                {\r\n                                    this.state.movies.map((movieObj) => (\r\n                                        <div className=\"card movies-card\" onMouseEnter={() => this.setState({ hover: movieObj.id })} onMouseLeave={() => this.setState({ hover: '' })} >\r\n                                            <img src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`} alt={movieObj.title} className=\"card-img-top movies-img\" />\r\n                                            {/* <div className=\"card-body\"> */}\r\n                                            <h1 className=\"card-title movies-title\">{movieObj.original_title}</h1>\r\n                                            {/* <p className=\"card-text movies-text\">{movieObj.overview}</p> */}\r\n                                            <div className='button-wrapper ' style={{ display: 'flex', width: '100', justifyContent: 'center ' }}>\r\n                                                {\r\n                                                    this.state.hover == movieObj.id &&\r\n                                                    \r\n                                                    <a className=\"btn btn-primary movies-button\" style={{border:'none'}} onClick={()=>this.handleFavorites(movieObj)}>{this.state.favorites.includes(movieObj.id)?\"Remove from favorites\":\"Add to favorites\"}</a>\r\n\r\n                                                }\r\n\r\n\r\n                                            </div>\r\n                                            {/* </div> */}\r\n                                        </div>\r\n                                    ))\r\n                                }\r\n                            </div>\r\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                <nav aria-label=\"Page navigation example\">\r\n                                    <ul class=\"pagination\">\r\n                                        <li class=\"page-item\"><a class=\"page-link\" onClick={this.handleLeft}>Previous</a></li>\r\n                                        {\r\n                                            this.state.parr.map((value) => (\r\n                                                <li class=\"page-item\"><a class=\"page-link\" onClick={() => this.handleClick(value)}>{value}</a></li>\r\n                                            ))\r\n                                        }\r\n                                        <li class=\"page-item\"><a class=\"page-link\" onClick={this.handleRight}>Next</a></li>\r\n                                    </ul>\r\n                                </nav>\r\n                            </div>\r\n                        </div>\r\n\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\getMovies.js",[],[],"C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Navbar.js",[],[],"C:\\Users\\acer\\Desktop\\Movie Box\\Movies-Box\\src\\Component\\Favorites.js",["60","61","62","63","64","65"],[],"import React, { Component } from 'react'\r\n// import { movies } from './getMovies'\r\n\r\nexport default class Favorites extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            genres: [],\r\n            currgen: 'All Genres',\r\n            movies: [],\r\n            currText: '',\r\n            limit: 5,\r\n            currPage: 1\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        let genreids = {\r\n            28: 'Action', 12: 'Adventure', 16: 'Animation', 35: 'Comedy', 80: 'Crime', 99: 'Documentary', 18: 'Drama', 10751: 'Family', 14: 'Fantasy', 36: 'History',\r\n            27: 'Horror', 10402: 'Music', 9648: 'Mystery', 10749: 'Romance', 878: 'Sci-Fi', 10770: 'TV', 53: 'Thriller', 10752: 'War', 37: 'Western'\r\n        };\r\n        let data = JSON.parse(localStorage.getItem(\"movie2\") || \"[]\")\r\n        let temp = []\r\n\r\n        data.forEach((movieObj) => {\r\n            if (!temp.includes(genreids[movieObj.genre_ids[0]])) {\r\n                temp.push(genreids[movieObj.genre_ids[0]]);\r\n            }\r\n        })\r\n        temp.unshift('All Genres');\r\n        this.setState({\r\n            genres: [...temp],\r\n            movies: [...data]\r\n        })\r\n    }\r\n    handleGenreChange = (genre) => {\r\n        this.setState({\r\n            currgen: genre\r\n        })\r\n    }\r\n\r\n    sortPopularityDesc = () => {\r\n        let temp = this.state.movies;\r\n        temp.sort(function (objA, objB) {\r\n            return objB.popularity - objA.popularity\r\n        })\r\n        this.setState({\r\n            movies: [...temp]\r\n        })\r\n    }\r\n    sortPopularityAsc = () => {\r\n        let temp = this.state.movies;\r\n        temp.sort(function (objA, objB) {\r\n            return objA.popularity - objB.popularity\r\n        })\r\n        this.setState({\r\n            movies: [...temp]\r\n        })\r\n    }\r\n\r\n    sortRatingDesc = () => {\r\n        let temp = this.state.movies;\r\n        temp.sort(function (objA, objB) {\r\n            return objB.vote_average - objA.vote_average\r\n        })\r\n        this.setState({\r\n            movies: [...temp]\r\n        })\r\n    }\r\n    sortRatingAsc = () => {\r\n        let temp = this.state.movies;\r\n        temp.sort(function (objA, objB) {\r\n            return objA.vote_average - objB.vote_average\r\n        })\r\n        this.setState({\r\n            movies: [...temp]\r\n        })\r\n    }\r\n    handlePageChange = (page) => {\r\n        this.setState({\r\n            currPage: page\r\n        })\r\n    }\r\n    handleDelete = (id) => {\r\n        let newarr = [];\r\n        newarr = this.state.movies.filter((movieObj) => movieObj.id != id)\r\n        this.setState({\r\n            movies: [...newarr]\r\n        })\r\n        localStorage.setItem(\"movies-app\", JSON.stringify(newarr))\r\n    }\r\n    render() {\r\n\r\n        let genreids = {\r\n            28: 'Action', 12: 'Adventure', 16: 'Animation', 35: 'Comedy', 80: 'Crime', 99: 'Documentary', 18: 'Drama', 10751: 'Family', 14: 'Fantasy', 36: 'History',\r\n            27: 'Horror', 10402: 'Music', 9648: 'Mystery', 10749: 'Romance', 878: 'Sci-Fi', 10770: 'TV', 53: 'Thriller', 10752: 'War', 37: 'Western'\r\n        };\r\n        let filterarr = [];\r\n\r\n        if (this.state.currText == '') {\r\n            filterarr = this.state.movies\r\n        }\r\n        else {\r\n            filterarr = this.state.movies.filter((movieObj) => {\r\n                let title = movieObj.original_title.toLowerCase();\r\n                return title.includes(this.state.currText.toLocaleLowerCase())\r\n            })\r\n        }\r\n\r\n\r\n        // if(this.state.currgen==='All Genres'){\r\n        //     filterarr=this.state.movies\r\n        // }\r\n        if (this.state.currgen != 'All Genres') {\r\n            filterarr = this.state.movies.filter((movieObj) =>\r\n                genreids[movieObj.genre_ids[0]] == this.state.currgen\r\n                // let title = movieObj.original_title.toLowerCase();\r\n                // return title.includes(this.state.currText.toLowerCase())\r\n            )\r\n        }\r\n\r\n        let pages = Math.ceil(filterarr.length / this.state.limit);\r\n        let pagesarr = [];\r\n        for (let i = 1; i <= pages; i++) {\r\n            pagesarr.push(i);\r\n        }\r\n        let si = (this.state.currPage - 1) * this.state.limit;\r\n        let ei = si + Number(this.state.limit);\r\n        filterarr = filterarr.slice(si, ei);\r\n\r\n\r\n        return (\r\n            <div>\r\n                <>\r\n                    <div className='main'>\r\n                        <div className='row'>\r\n                            <div className='col-lg-3 col-sm-12'>\r\n                                <ul class=\"list-group favorites-genres\">\r\n                                    {\r\n                                        this.state.genres.map((genre) => (\r\n\r\n                                            this.state.currgen == genre ?\r\n                                                <li class=\"list-group-item\" style={{ background: '#00e6e6', color: 'white', fontWeight: 'bold' }} >{genre}</li> :\r\n\r\n                                                <li class=\"list-group-item\" style={{ background: 'white', color: '#00e6e6' }} onClick={() => this.handleGenreChange(genre)} >{genre}</li>\r\n                                        ))\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                            <div className='col-lg-9 favorites-table col-sm-12'>\r\n\r\n\r\n                                <div className='row'>\r\n                                    <input type=\"text\" className='input-group-text col' placeholder='Search' value={this.state.currText} onChange={(e) => this.setState({ currText: e.target.value })} />\r\n                                    <input type=\"number\" className=\"input-group-text col\" placeholder=\"Rows Count\" value={this.state.limit} onChange={(e) => this.setState({ limit: e.target.value })} />\r\n                                </div>\r\n                                <div className='row'>\r\n                                    <table class=\"table\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th scope=\"col\" style={{color:'white'}}>Title</th>\r\n                                                <th scope=\"col\" style={{color:'white'}}>Genres</th>\r\n                                                <th scope=\"col\"  style={{color:'white'}}><i class=\"fa-solid fa-caret-up\" onClick={this.sortPopularityDesc}></i>Popularity<i class=\"fa-solid fa-caret-down\" onClick={this.sortPopularityAsc}></i></th>\r\n                                                <th scope=\"col\"  style={{color:'white'}}><i class=\"fa-solid fa-caret-up\" onClick={this.sortRatingDesc}></i>Rating<i class=\"fa-solid fa-caret-down\" onClick={this.sortRatingAsc}></i></th>\r\n                                                <th scope=\"col\"  style={{color:'white'}}></th>\r\n\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                filterarr.map((movieObj) => (\r\n                                                    <tr>\r\n                                                        <td style={{color:'white'}}><img src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`} alt={movieObj.title} style={{ width: '5rem' }} /> {movieObj.original_title}</td>\r\n\r\n                                                        <td style={{color:'white'}}>{genreids[movieObj.genre_ids[0]]}</td>\r\n                                                        <td style={{color:'white'}}>{movieObj.popularity} </td>\r\n                                                        <td style={{color:'white'}}>{movieObj.vote_average} </td>\r\n                                                        <td><button type=\"button\" class=\"btn btn-danger\" onClick={() => this.handleDelete(movieObj.id)}>Delete</button></td>\r\n                                                        {/* <td style={{color: 'white'}}>{genreids[movieObj.genre_ids[0]]}</td>\r\n                                                    <td style={{color: 'white'}}>{movieObj.popularity}</td>\r\n                                                    <td style={{color: 'white'}}>{movieObj.vote_average}</td>\r\n                                                    <td style={{color: 'white'}}><img src={`https://image.tmdb.org/t/p/original${movieObj.backdrop_path}`} alt={movieObj.title} style={{width:'5rem'}}/> {movieObj.original_title}</td>\r\n                                                    <td><button type=\"button\" class=\"btn btn-danger\" onClick={()=>this.handleDelete(movieObj.id)}>Delete</button></td> */}\r\n                                                    </tr>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </tbody>\r\n\r\n                                    </table>\r\n                                    <nav aria-label=\"Page navigation example\">\r\n                                        <ul class=\"pagination\">\r\n                                            {\r\n                                                pagesarr.map((page) => (\r\n                                                    <li class=\"page-item\"><a class=\"page-link\" onClick={() => this.handlePageChange(page)}>{page}</a></li>\r\n                                                ))\r\n                                            }\r\n\r\n                                        </ul>\r\n                                    </nav>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n",{"ruleId":"66","severity":1,"message":"67","line":1,"column":8,"nodeType":"68","messageId":"69","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":6,"column":10,"nodeType":"68","messageId":"69","endLine":6,"endColumn":16},{"ruleId":"66","severity":1,"message":"71","line":13,"column":3,"nodeType":"68","messageId":"69","endLine":13,"endColumn":16},{"ruleId":"72","severity":1,"message":"73","line":5,"column":1,"nodeType":"74","endLine":28,"endColumn":2},{"ruleId":"75","severity":1,"message":"76","line":12,"column":27,"nodeType":"77","messageId":"78","endLine":12,"endColumn":29},{"ruleId":"75","severity":1,"message":"79","line":54,"column":33,"nodeType":"77","messageId":"78","endLine":54,"endColumn":35},{"ruleId":"75","severity":1,"message":"79","line":62,"column":19,"nodeType":"77","messageId":"78","endLine":62,"endColumn":21},{"ruleId":"75","severity":1,"message":"79","line":72,"column":50,"nodeType":"77","messageId":"78","endLine":72,"endColumn":52},{"ruleId":"75","severity":1,"message":"76","line":93,"column":46,"nodeType":"77","messageId":"78","endLine":93,"endColumn":48},{"ruleId":"75","severity":1,"message":"76","line":109,"column":70,"nodeType":"77","messageId":"78","endLine":109,"endColumn":72},{"ruleId":"80","severity":1,"message":"81","line":111,"column":53,"nodeType":"82","endLine":111,"endColumn":167},{"ruleId":"80","severity":1,"message":"81","line":125,"column":63,"nodeType":"82","endLine":125,"endColumn":110},{"ruleId":"80","severity":1,"message":"81","line":128,"column":71,"nodeType":"82","endLine":128,"endColumn":132},{"ruleId":"80","severity":1,"message":"81","line":131,"column":63,"nodeType":"82","endLine":131,"endColumn":111},{"ruleId":"75","severity":1,"message":"79","line":85,"column":69,"nodeType":"77","messageId":"78","endLine":85,"endColumn":71},{"ruleId":"75","severity":1,"message":"76","line":99,"column":33,"nodeType":"77","messageId":"78","endLine":99,"endColumn":35},{"ruleId":"75","severity":1,"message":"79","line":113,"column":32,"nodeType":"77","messageId":"78","endLine":113,"endColumn":34},{"ruleId":"75","severity":1,"message":"76","line":115,"column":49,"nodeType":"77","messageId":"78","endLine":115,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":141,"column":64,"nodeType":"77","messageId":"78","endLine":141,"endColumn":66},{"ruleId":"80","severity":1,"message":"81","line":194,"column":75,"nodeType":"82","endLine":194,"endColumn":140},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'movies' is defined but never used.","'BrowserRouter' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous class","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]